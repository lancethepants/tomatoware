diff -Naur cmake-3.19.0_orig/Utilities/cmlibuv/src/unix/core.c cmake-3.19.0/Utilities/cmlibuv/src/unix/core.c
--- cmake-3.19.0_orig/Utilities/cmlibuv/src/unix/core.c	2020-11-23 12:41:11.892269582 -0700
+++ cmake-3.19.0/Utilities/cmlibuv/src/unix/core.c	2020-11-23 12:42:18.824703879 -0700
@@ -1035,7 +1035,7 @@
 #if defined(__FreeBSD__) || defined(__NetBSD__) || defined(__linux__)
   int r;
 
-  r = dup3(oldfd, newfd, O_CLOEXEC);
+  r = dup2(oldfd, newfd);
   if (r == -1)
     return UV__ERR(errno);
 
diff -Naur cmake-3.19.0_orig/Utilities/cmlibuv/src/unix/linux-core.c cmake-3.19.0/Utilities/cmlibuv/src/unix/linux-core.c
--- cmake-3.19.0_orig/Utilities/cmlibuv/src/unix/linux-core.c	2020-11-23 12:41:11.892269582 -0700
+++ cmake-3.19.0/Utilities/cmlibuv/src/unix/linux-core.c	2020-11-23 12:48:57.615148932 -0700
@@ -85,8 +85,9 @@
 
 int uv__platform_loop_init(uv_loop_t* loop) {
   int fd;
-  fd = epoll_create1(O_CLOEXEC);
-
+//  fd = epoll_create1(O_CLOEXEC);
+  fd = -1;
+  errno = ENOSYS;
   /* epoll_create1() can fail either because it's not implemented (old kernel)
    * or because it doesn't understand the O_CLOEXEC flag.
    */
diff -Naur cmake-3.19.0_orig/Utilities/cmlibuv/src/unix/process.c cmake-3.19.0/Utilities/cmlibuv/src/unix/process.c
--- cmake-3.19.0_orig/Utilities/cmlibuv/src/unix/process.c	2020-11-23 12:41:11.892269582 -0700
+++ cmake-3.19.0/Utilities/cmlibuv/src/unix/process.c	2020-11-23 12:49:38.967392433 -0700
@@ -151,7 +151,7 @@
 
 
 int uv__make_pipe(int fds[2], int flags) {
-#if defined(__FreeBSD__) || defined(__linux__)
+#if defined(__FreeBSD__)
   if (pipe2(fds, flags | O_CLOEXEC))
     return UV__ERR(errno);
 
