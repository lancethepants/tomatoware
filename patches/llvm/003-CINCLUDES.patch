commit e4c40c7e7a9b33a9d4795b8b9dacc5537cefe2b5
Author: lancethepants <lancethepants@gmail.com>
Date:   Tue Nov 10 11:50:34 2020 -0700

    Fixes an issue where adding a relative path to the C include Directories via the C_INCLUDE_DIRS compile time option, there is a "/" ommitted to join the sysroot and the supplied relative path. Sysroot is not expected to have a trailing "/", and...
    
    ...the relative path of course does not start with "/", so the "/" is needed to properly join them.
    
    Differential Revision: https://reviews.llvm.org/D91194

diff --git a/clang/lib/Driver/ToolChains/Darwin.cpp b/clang/lib/Driver/ToolChains/Darwin.cpp
index c847be9ee26..f242f571312 100644
--- a/clang/lib/Driver/ToolChains/Darwin.cpp
+++ b/clang/lib/Driver/ToolChains/Darwin.cpp
@@ -1959,9 +1959,12 @@ void DarwinClang::AddClangSystemIncludeArgs(const llvm::opt::ArgList &DriverArgs
     llvm::SmallVector<llvm::StringRef, 5> dirs;
     CIncludeDirs.split(dirs, ":");
     for (llvm::StringRef dir : dirs) {
-      llvm::StringRef Prefix =
-          llvm::sys::path::is_absolute(dir) ? "" : llvm::StringRef(Sysroot);
-      addExternCSystemInclude(DriverArgs, CC1Args, Prefix + dir);
+      if (llvm::sys::path::is_absolute(dir))
+        addExternCSystemInclude(DriverArgs, CC1Args, dir);
+      else {
+        addExternCSystemInclude(DriverArgs, CC1Args,
+                                StringRef(Sysroot) + "/" + dir);
+      }
     }
   } else {
     // Otherwise, add <sysroot>/usr/include.
diff --git a/clang/lib/Driver/ToolChains/Fuchsia.cpp b/clang/lib/Driver/ToolChains/Fuchsia.cpp
index 79d3a8d554d..cc12f93f8a4 100644
--- a/clang/lib/Driver/ToolChains/Fuchsia.cpp
+++ b/clang/lib/Driver/ToolChains/Fuchsia.cpp
@@ -296,9 +296,12 @@ void Fuchsia::AddClangSystemIncludeArgs(const ArgList &DriverArgs,
     SmallVector<StringRef, 5> dirs;
     CIncludeDirs.split(dirs, ":");
     for (StringRef dir : dirs) {
-      StringRef Prefix =
-          llvm::sys::path::is_absolute(dir) ? "" : StringRef(D.SysRoot);
-      addExternCSystemInclude(DriverArgs, CC1Args, Prefix + dir);
+      if (llvm::sys::path::is_absolute(dir))
+        addExternCSystemInclude(DriverArgs, CC1Args, dir);
+      else {
+        addExternCSystemInclude(DriverArgs, CC1Args,
+                                StringRef(D.SysRoot) + "/" + dir);
+      }
     }
     return;
   }
diff --git a/clang/lib/Driver/ToolChains/Hurd.cpp b/clang/lib/Driver/ToolChains/Hurd.cpp
index a700d7b9064..e165ac24025 100644
--- a/clang/lib/Driver/ToolChains/Hurd.cpp
+++ b/clang/lib/Driver/ToolChains/Hurd.cpp
@@ -158,9 +158,12 @@ void Hurd::AddClangSystemIncludeArgs(const ArgList &DriverArgs,
     SmallVector<StringRef, 5> Dirs;
     CIncludeDirs.split(Dirs, ":");
     for (StringRef Dir : Dirs) {
-      StringRef Prefix =
-          llvm::sys::path::is_absolute(Dir) ? "" : StringRef(SysRoot);
-      addExternCSystemInclude(DriverArgs, CC1Args, Prefix + Dir);
+      if (llvm::sys::path::is_absolute(Dir))
+        addExternCSystemInclude(DriverArgs, CC1Args, Dir);
+      else {
+        addExternCSystemInclude(DriverArgs, CC1Args,
+                                StringRef(SysRoot) + "/" + Dir);
+      }
     }
     return;
   }
diff --git a/clang/lib/Driver/ToolChains/Linux.cpp b/clang/lib/Driver/ToolChains/Linux.cpp
index 180350476c3..1816593b2f2 100644
--- a/clang/lib/Driver/ToolChains/Linux.cpp
+++ b/clang/lib/Driver/ToolChains/Linux.cpp
@@ -578,9 +578,12 @@ void Linux::AddClangSystemIncludeArgs(const ArgList &DriverArgs,
     SmallVector<StringRef, 5> dirs;
     CIncludeDirs.split(dirs, ":");
     for (StringRef dir : dirs) {
-      StringRef Prefix =
-          llvm::sys::path::is_absolute(dir) ? "" : StringRef(SysRoot);
-      addExternCSystemInclude(DriverArgs, CC1Args, Prefix + dir);
+      if (llvm::sys::path::is_absolute(dir))
+        addExternCSystemInclude(DriverArgs, CC1Args, dir);
+      else {
+        addExternCSystemInclude(DriverArgs, CC1Args,
+                                StringRef(SysRoot) + "/" + dir);
+      }
     }
     return;
   }
diff --git a/clang/lib/Driver/ToolChains/OpenBSD.cpp b/clang/lib/Driver/ToolChains/OpenBSD.cpp
index f155d74632f..0f8169bb413 100644
--- a/clang/lib/Driver/ToolChains/OpenBSD.cpp
+++ b/clang/lib/Driver/ToolChains/OpenBSD.cpp
@@ -274,9 +274,12 @@ void OpenBSD::AddClangSystemIncludeArgs(
     SmallVector<StringRef, 5> dirs;
     CIncludeDirs.split(dirs, ":");
     for (StringRef dir : dirs) {
-      StringRef Prefix =
-          llvm::sys::path::is_absolute(dir) ? StringRef(D.SysRoot) : "";
-      addExternCSystemInclude(DriverArgs, CC1Args, Prefix + dir);
+      if (llvm::sys::path::is_absolute(dir))
+        addExternCSystemInclude(DriverArgs, CC1Args, dir);
+      else {
+        addExternCSystemInclude(DriverArgs, CC1Args,
+                                StringRef(D.SysRoot) + "/" + dir);
+      }
     }
     return;
   }
diff --git a/clang/lib/Driver/ToolChains/Solaris.cpp b/clang/lib/Driver/ToolChains/Solaris.cpp
index 4ed4d839ad1..96cf71ed254 100644
--- a/clang/lib/Driver/ToolChains/Solaris.cpp
+++ b/clang/lib/Driver/ToolChains/Solaris.cpp
@@ -245,9 +245,12 @@ void Solaris::AddClangSystemIncludeArgs(const ArgList &DriverArgs,
     SmallVector<StringRef, 5> dirs;
     CIncludeDirs.split(dirs, ":");
     for (StringRef dir : dirs) {
-      StringRef Prefix =
-          llvm::sys::path::is_absolute(dir) ? "" : StringRef(D.SysRoot);
-      addExternCSystemInclude(DriverArgs, CC1Args, Prefix + dir);
+      if (llvm::sys::path::is_absolute(dir))
+        addExternCSystemInclude(DriverArgs, CC1Args, dir);
+      else {
+        addExternCSystemInclude(DriverArgs, CC1Args,
+                                StringRef(D.SysRoot) + "/" + dir);
+      }
     }
     return;
   }
diff --git a/clang/lib/Driver/ToolChains/WebAssembly.cpp b/clang/lib/Driver/ToolChains/WebAssembly.cpp
index 6b654886e77..bd5d0fcfbaf 100644
--- a/clang/lib/Driver/ToolChains/WebAssembly.cpp
+++ b/clang/lib/Driver/ToolChains/WebAssembly.cpp
@@ -331,9 +331,12 @@ void WebAssembly::AddClangSystemIncludeArgs(const ArgList &DriverArgs,
     SmallVector<StringRef, 5> dirs;
     CIncludeDirs.split(dirs, ":");
     for (StringRef dir : dirs) {
-      StringRef Prefix =
-          llvm::sys::path::is_absolute(dir) ? "" : StringRef(D.SysRoot);
-      addExternCSystemInclude(DriverArgs, CC1Args, Prefix + dir);
+      if (llvm::sys::path::is_absolute(dir))
+        addExternCSystemInclude(DriverArgs, CC1Args, dir);
+      else {
+        addExternCSystemInclude(DriverArgs, CC1Args,
+                                StringRef(D.SysRoot) + "/" + dir);
+      }
     }
     return;
   }
